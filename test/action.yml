---
name: Test Go
description: |
  Github Action to Build & Test Go

  RequiredEnv:
    GITHUB_TOKEN
    SONAR_TOKEN
inputs:
  go-version:
    description: |
      The go-version input is optional.
      If not supplied, the action will try to download latest go version.
      Due to the peculiarities of YAML parsing, it is recommended to wrap
      the version in single quotation marks
    required: false
  sonar_wait_flag:
    description: Says if Sonar has to wait for analysis
    required: false
runs:
  using: composite
  steps:
    - uses: actions/setup-go@v6
      with:
        go-version-file: go.mod

    - name: Install Application Go Packages
      shell: bash
      run: |
        echo "::group::Install Go Packages"
        go mod download
        echo "::endgroup::"

    - name: Run pre_test.sh
      shell: bash
      run: |
        pretest_cmd="echo 'NO_PRETEST'"
        if [ -f ".github/actions/pre_test.sh" ]; then
            pretest_cmd="$(cat .github/actions/pre_test.sh)"
        fi
        echo "pretest_cmd: $pretest_cmd"
        sh -c "${pretest_cmd}"

    - name: Test with go and collect coverage result
      shell: bash
      run: |
        echo "::group::Test with go and collect coverage result"
        go test ./... -coverprofile coverage.out -covermode=atomic -v -race
        go tool cover -html=coverage.out -o coverage.html
        echo "::endgroup::"

    - name: SonarCloud Scan
      uses: sonarsource/sonarqube-scan-action@v6
      if: env.ENABLE_SONAR == 'true'
      with:
        args: >
          -Dsonar.qualitygate.wait=${{ inputs.sonar_wait_flag }}
          -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ env.SONAR_ORG }}
          -Dsonar.go.coverage.reportPaths=coverage.out

    - name: Add Coverage to Summary
      if: env.ENABLE_SONAR != 'true'
      shell: bash
      run: |
        TOTAL=$(go tool cover -func=coverage.out \
          | grep total | awk '{print $3}')

        echo "## ðŸ“Š Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Total Coverage: $TOTAL**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "<details>" >> $GITHUB_STEP_SUMMARY
        echo "<summary>Coverage by Package</summary>" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        go tool cover -func=coverage.out >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "</details>" >> $GITHUB_STEP_SUMMARY

    - name: Upload Coverage Report
      if: env.ENABLE_SONAR != 'true'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage.html
          coverage.out
        retention-days: 30
